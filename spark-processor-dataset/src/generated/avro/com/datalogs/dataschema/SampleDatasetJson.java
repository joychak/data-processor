/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.datalogs.dataschema;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/**  */
@org.apache.avro.specific.AvroGenerated
public class SampleDatasetJson extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -346139135885442580L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SampleDatasetJson\",\"namespace\":\"com.datalogs.dataschema\",\"doc\":\"\",\"fields\":[{\"name\":\"id\",\"type\":\"int\",\"doc\":\"\"},{\"name\":\"field1\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"\"},{\"name\":\"field2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"OPTIONAL:  \"},{\"name\":\"field3\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\" \"},{\"name\":\"field4\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"\"},{\"name\":\"field5\",\"type\":\"int\",\"doc\":\"\"},{\"name\":\"field6\",\"type\":\"int\",\"doc\":\"\"},{\"name\":\"field7\",\"type\":\"int\",\"doc\":\"\"},{\"name\":\"utcDatetime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"U\"},{\"name\":\"metaInfo\",\"type\":{\"type\":\"record\",\"name\":\"MetaInfo\",\"doc\":\"\",\"fields\":[{\"name\":\"eventUTC\",\"type\":\"long\",\"doc\":\"FORMAT:milliseconds|Derived field for storing datetime value from utc_datetime field in UTC. Will be equal to processingUTC in cases where utc ts cannot be calculated\"},{\"name\":\"sourceHost\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Derived field for storing source machine name which sent us the file\"},{\"name\":\"sourceName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"Derived field for storing source filename\"},{\"name\":\"batchId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"batchId\"},{\"name\":\"processingUTC\",\"type\":\"long\",\"doc\":\"FORMAT:milliseconds|Derived field for storing record write time in UTC.\"},{\"name\":\"isValidEventUTC\",\"type\":\"int\",\"doc\":\"FORMAT:0 or 1. 0 -- In Case eventts is inferred correctly. 1 -- In cases where eventUTC is defaulted to processingUTC \"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SampleDatasetJson> ENCODER =
      new BinaryMessageEncoder<SampleDatasetJson>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SampleDatasetJson> DECODER =
      new BinaryMessageDecoder<SampleDatasetJson>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SampleDatasetJson> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SampleDatasetJson> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SampleDatasetJson>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SampleDatasetJson to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SampleDatasetJson from a ByteBuffer. */
  public static SampleDatasetJson fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /**  */
  @Deprecated public int id;
  /**  */
  @Deprecated public java.lang.String field1;
  /** OPTIONAL:   */
  @Deprecated public java.lang.String field2;
  /**   */
  @Deprecated public java.lang.String field3;
  /**  */
  @Deprecated public java.lang.String field4;
  /**  */
  @Deprecated public int field5;
  /**  */
  @Deprecated public int field6;
  /**  */
  @Deprecated public int field7;
  /** U */
  @Deprecated public java.lang.String utcDatetime;
  @Deprecated public com.datalogs.dataschema.MetaInfo metaInfo;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SampleDatasetJson() {}

  /**
   * All-args constructor.
   * @param id 
   * @param field1 
   * @param field2 OPTIONAL:  
   * @param field3  
   * @param field4 
   * @param field5 
   * @param field6 
   * @param field7 
   * @param utcDatetime U
   * @param metaInfo The new value for metaInfo
   */
  public SampleDatasetJson(java.lang.Integer id, java.lang.String field1, java.lang.String field2, java.lang.String field3, java.lang.String field4, java.lang.Integer field5, java.lang.Integer field6, java.lang.Integer field7, java.lang.String utcDatetime, com.datalogs.dataschema.MetaInfo metaInfo) {
    this.id = id;
    this.field1 = field1;
    this.field2 = field2;
    this.field3 = field3;
    this.field4 = field4;
    this.field5 = field5;
    this.field6 = field6;
    this.field7 = field7;
    this.utcDatetime = utcDatetime;
    this.metaInfo = metaInfo;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return field1;
    case 2: return field2;
    case 3: return field3;
    case 4: return field4;
    case 5: return field5;
    case 6: return field6;
    case 7: return field7;
    case 8: return utcDatetime;
    case 9: return metaInfo;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: field1 = (java.lang.String)value$; break;
    case 2: field2 = (java.lang.String)value$; break;
    case 3: field3 = (java.lang.String)value$; break;
    case 4: field4 = (java.lang.String)value$; break;
    case 5: field5 = (java.lang.Integer)value$; break;
    case 6: field6 = (java.lang.Integer)value$; break;
    case 7: field7 = (java.lang.Integer)value$; break;
    case 8: utcDatetime = (java.lang.String)value$; break;
    case 9: metaInfo = (com.datalogs.dataschema.MetaInfo)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return 
   */
  public java.lang.Integer getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * 
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'field1' field.
   * @return 
   */
  public java.lang.String getField1() {
    return field1;
  }

  /**
   * Sets the value of the 'field1' field.
   * 
   * @param value the value to set.
   */
  public void setField1(java.lang.String value) {
    this.field1 = value;
  }

  /**
   * Gets the value of the 'field2' field.
   * @return OPTIONAL:  
   */
  public java.lang.String getField2() {
    return field2;
  }

  /**
   * Sets the value of the 'field2' field.
   * OPTIONAL:  
   * @param value the value to set.
   */
  public void setField2(java.lang.String value) {
    this.field2 = value;
  }

  /**
   * Gets the value of the 'field3' field.
   * @return  
   */
  public java.lang.String getField3() {
    return field3;
  }

  /**
   * Sets the value of the 'field3' field.
   *  
   * @param value the value to set.
   */
  public void setField3(java.lang.String value) {
    this.field3 = value;
  }

  /**
   * Gets the value of the 'field4' field.
   * @return 
   */
  public java.lang.String getField4() {
    return field4;
  }

  /**
   * Sets the value of the 'field4' field.
   * 
   * @param value the value to set.
   */
  public void setField4(java.lang.String value) {
    this.field4 = value;
  }

  /**
   * Gets the value of the 'field5' field.
   * @return 
   */
  public java.lang.Integer getField5() {
    return field5;
  }

  /**
   * Sets the value of the 'field5' field.
   * 
   * @param value the value to set.
   */
  public void setField5(java.lang.Integer value) {
    this.field5 = value;
  }

  /**
   * Gets the value of the 'field6' field.
   * @return 
   */
  public java.lang.Integer getField6() {
    return field6;
  }

  /**
   * Sets the value of the 'field6' field.
   * 
   * @param value the value to set.
   */
  public void setField6(java.lang.Integer value) {
    this.field6 = value;
  }

  /**
   * Gets the value of the 'field7' field.
   * @return 
   */
  public java.lang.Integer getField7() {
    return field7;
  }

  /**
   * Sets the value of the 'field7' field.
   * 
   * @param value the value to set.
   */
  public void setField7(java.lang.Integer value) {
    this.field7 = value;
  }

  /**
   * Gets the value of the 'utcDatetime' field.
   * @return U
   */
  public java.lang.String getUtcDatetime() {
    return utcDatetime;
  }

  /**
   * Sets the value of the 'utcDatetime' field.
   * U
   * @param value the value to set.
   */
  public void setUtcDatetime(java.lang.String value) {
    this.utcDatetime = value;
  }

  /**
   * Gets the value of the 'metaInfo' field.
   * @return The value of the 'metaInfo' field.
   */
  public com.datalogs.dataschema.MetaInfo getMetaInfo() {
    return metaInfo;
  }

  /**
   * Sets the value of the 'metaInfo' field.
   * @param value the value to set.
   */
  public void setMetaInfo(com.datalogs.dataschema.MetaInfo value) {
    this.metaInfo = value;
  }

  /**
   * Creates a new SampleDatasetJson RecordBuilder.
   * @return A new SampleDatasetJson RecordBuilder
   */
  public static com.datalogs.dataschema.SampleDatasetJson.Builder newBuilder() {
    return new com.datalogs.dataschema.SampleDatasetJson.Builder();
  }

  /**
   * Creates a new SampleDatasetJson RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SampleDatasetJson RecordBuilder
   */
  public static com.datalogs.dataschema.SampleDatasetJson.Builder newBuilder(com.datalogs.dataschema.SampleDatasetJson.Builder other) {
    return new com.datalogs.dataschema.SampleDatasetJson.Builder(other);
  }

  /**
   * Creates a new SampleDatasetJson RecordBuilder by copying an existing SampleDatasetJson instance.
   * @param other The existing instance to copy.
   * @return A new SampleDatasetJson RecordBuilder
   */
  public static com.datalogs.dataschema.SampleDatasetJson.Builder newBuilder(com.datalogs.dataschema.SampleDatasetJson other) {
    return new com.datalogs.dataschema.SampleDatasetJson.Builder(other);
  }

  /**
   * RecordBuilder for SampleDatasetJson instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SampleDatasetJson>
    implements org.apache.avro.data.RecordBuilder<SampleDatasetJson> {

    /**  */
    private int id;
    /**  */
    private java.lang.String field1;
    /** OPTIONAL:   */
    private java.lang.String field2;
    /**   */
    private java.lang.String field3;
    /**  */
    private java.lang.String field4;
    /**  */
    private int field5;
    /**  */
    private int field6;
    /**  */
    private int field7;
    /** U */
    private java.lang.String utcDatetime;
    private com.datalogs.dataschema.MetaInfo metaInfo;
    private com.datalogs.dataschema.MetaInfo.Builder metaInfoBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.datalogs.dataschema.SampleDatasetJson.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.field1)) {
        this.field1 = data().deepCopy(fields()[1].schema(), other.field1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.field2)) {
        this.field2 = data().deepCopy(fields()[2].schema(), other.field2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.field3)) {
        this.field3 = data().deepCopy(fields()[3].schema(), other.field3);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.field4)) {
        this.field4 = data().deepCopy(fields()[4].schema(), other.field4);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.field5)) {
        this.field5 = data().deepCopy(fields()[5].schema(), other.field5);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.field6)) {
        this.field6 = data().deepCopy(fields()[6].schema(), other.field6);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.field7)) {
        this.field7 = data().deepCopy(fields()[7].schema(), other.field7);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.utcDatetime)) {
        this.utcDatetime = data().deepCopy(fields()[8].schema(), other.utcDatetime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.metaInfo)) {
        this.metaInfo = data().deepCopy(fields()[9].schema(), other.metaInfo);
        fieldSetFlags()[9] = true;
      }
      if (other.hasMetaInfoBuilder()) {
        this.metaInfoBuilder = com.datalogs.dataschema.MetaInfo.newBuilder(other.getMetaInfoBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing SampleDatasetJson instance
     * @param other The existing instance to copy.
     */
    private Builder(com.datalogs.dataschema.SampleDatasetJson other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.field1)) {
        this.field1 = data().deepCopy(fields()[1].schema(), other.field1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.field2)) {
        this.field2 = data().deepCopy(fields()[2].schema(), other.field2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.field3)) {
        this.field3 = data().deepCopy(fields()[3].schema(), other.field3);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.field4)) {
        this.field4 = data().deepCopy(fields()[4].schema(), other.field4);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.field5)) {
        this.field5 = data().deepCopy(fields()[5].schema(), other.field5);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.field6)) {
        this.field6 = data().deepCopy(fields()[6].schema(), other.field6);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.field7)) {
        this.field7 = data().deepCopy(fields()[7].schema(), other.field7);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.utcDatetime)) {
        this.utcDatetime = data().deepCopy(fields()[8].schema(), other.utcDatetime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.metaInfo)) {
        this.metaInfo = data().deepCopy(fields()[9].schema(), other.metaInfo);
        fieldSetFlags()[9] = true;
      }
      this.metaInfoBuilder = null;
    }

    /**
      * Gets the value of the 'id' field.
      * 
      * @return The value.
      */
    public java.lang.Integer getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * 
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder setId(int value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * 
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * 
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'field1' field.
      * 
      * @return The value.
      */
    public java.lang.String getField1() {
      return field1;
    }

    /**
      * Sets the value of the 'field1' field.
      * 
      * @param value The value of 'field1'.
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder setField1(java.lang.String value) {
      validate(fields()[1], value);
      this.field1 = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'field1' field has been set.
      * 
      * @return True if the 'field1' field has been set, false otherwise.
      */
    public boolean hasField1() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'field1' field.
      * 
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder clearField1() {
      field1 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'field2' field.
      * OPTIONAL:  
      * @return The value.
      */
    public java.lang.String getField2() {
      return field2;
    }

    /**
      * Sets the value of the 'field2' field.
      * OPTIONAL:  
      * @param value The value of 'field2'.
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder setField2(java.lang.String value) {
      validate(fields()[2], value);
      this.field2 = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'field2' field has been set.
      * OPTIONAL:  
      * @return True if the 'field2' field has been set, false otherwise.
      */
    public boolean hasField2() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'field2' field.
      * OPTIONAL:  
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder clearField2() {
      field2 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'field3' field.
      *  
      * @return The value.
      */
    public java.lang.String getField3() {
      return field3;
    }

    /**
      * Sets the value of the 'field3' field.
      *  
      * @param value The value of 'field3'.
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder setField3(java.lang.String value) {
      validate(fields()[3], value);
      this.field3 = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'field3' field has been set.
      *  
      * @return True if the 'field3' field has been set, false otherwise.
      */
    public boolean hasField3() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'field3' field.
      *  
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder clearField3() {
      field3 = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'field4' field.
      * 
      * @return The value.
      */
    public java.lang.String getField4() {
      return field4;
    }

    /**
      * Sets the value of the 'field4' field.
      * 
      * @param value The value of 'field4'.
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder setField4(java.lang.String value) {
      validate(fields()[4], value);
      this.field4 = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'field4' field has been set.
      * 
      * @return True if the 'field4' field has been set, false otherwise.
      */
    public boolean hasField4() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'field4' field.
      * 
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder clearField4() {
      field4 = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'field5' field.
      * 
      * @return The value.
      */
    public java.lang.Integer getField5() {
      return field5;
    }

    /**
      * Sets the value of the 'field5' field.
      * 
      * @param value The value of 'field5'.
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder setField5(int value) {
      validate(fields()[5], value);
      this.field5 = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'field5' field has been set.
      * 
      * @return True if the 'field5' field has been set, false otherwise.
      */
    public boolean hasField5() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'field5' field.
      * 
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder clearField5() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'field6' field.
      * 
      * @return The value.
      */
    public java.lang.Integer getField6() {
      return field6;
    }

    /**
      * Sets the value of the 'field6' field.
      * 
      * @param value The value of 'field6'.
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder setField6(int value) {
      validate(fields()[6], value);
      this.field6 = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'field6' field has been set.
      * 
      * @return True if the 'field6' field has been set, false otherwise.
      */
    public boolean hasField6() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'field6' field.
      * 
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder clearField6() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'field7' field.
      * 
      * @return The value.
      */
    public java.lang.Integer getField7() {
      return field7;
    }

    /**
      * Sets the value of the 'field7' field.
      * 
      * @param value The value of 'field7'.
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder setField7(int value) {
      validate(fields()[7], value);
      this.field7 = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'field7' field has been set.
      * 
      * @return True if the 'field7' field has been set, false otherwise.
      */
    public boolean hasField7() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'field7' field.
      * 
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder clearField7() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'utcDatetime' field.
      * U
      * @return The value.
      */
    public java.lang.String getUtcDatetime() {
      return utcDatetime;
    }

    /**
      * Sets the value of the 'utcDatetime' field.
      * U
      * @param value The value of 'utcDatetime'.
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder setUtcDatetime(java.lang.String value) {
      validate(fields()[8], value);
      this.utcDatetime = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'utcDatetime' field has been set.
      * U
      * @return True if the 'utcDatetime' field has been set, false otherwise.
      */
    public boolean hasUtcDatetime() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'utcDatetime' field.
      * U
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder clearUtcDatetime() {
      utcDatetime = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'metaInfo' field.
      * @return The value.
      */
    public com.datalogs.dataschema.MetaInfo getMetaInfo() {
      return metaInfo;
    }

    /**
      * Sets the value of the 'metaInfo' field.
      * @param value The value of 'metaInfo'.
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder setMetaInfo(com.datalogs.dataschema.MetaInfo value) {
      validate(fields()[9], value);
      this.metaInfoBuilder = null;
      this.metaInfo = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'metaInfo' field has been set.
      * @return True if the 'metaInfo' field has been set, false otherwise.
      */
    public boolean hasMetaInfo() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'metaInfo' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.datalogs.dataschema.MetaInfo.Builder getMetaInfoBuilder() {
      if (metaInfoBuilder == null) {
        if (hasMetaInfo()) {
          setMetaInfoBuilder(com.datalogs.dataschema.MetaInfo.newBuilder(metaInfo));
        } else {
          setMetaInfoBuilder(com.datalogs.dataschema.MetaInfo.newBuilder());
        }
      }
      return metaInfoBuilder;
    }

    /**
     * Sets the Builder instance for the 'metaInfo' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.datalogs.dataschema.SampleDatasetJson.Builder setMetaInfoBuilder(com.datalogs.dataschema.MetaInfo.Builder value) {
      clearMetaInfo();
      metaInfoBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'metaInfo' field has an active Builder instance
     * @return True if the 'metaInfo' field has an active Builder instance
     */
    public boolean hasMetaInfoBuilder() {
      return metaInfoBuilder != null;
    }

    /**
      * Clears the value of the 'metaInfo' field.
      * @return This builder.
      */
    public com.datalogs.dataschema.SampleDatasetJson.Builder clearMetaInfo() {
      metaInfo = null;
      metaInfoBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SampleDatasetJson build() {
      try {
        SampleDatasetJson record = new SampleDatasetJson();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.field1 = fieldSetFlags()[1] ? this.field1 : (java.lang.String) defaultValue(fields()[1]);
        record.field2 = fieldSetFlags()[2] ? this.field2 : (java.lang.String) defaultValue(fields()[2]);
        record.field3 = fieldSetFlags()[3] ? this.field3 : (java.lang.String) defaultValue(fields()[3]);
        record.field4 = fieldSetFlags()[4] ? this.field4 : (java.lang.String) defaultValue(fields()[4]);
        record.field5 = fieldSetFlags()[5] ? this.field5 : (java.lang.Integer) defaultValue(fields()[5]);
        record.field6 = fieldSetFlags()[6] ? this.field6 : (java.lang.Integer) defaultValue(fields()[6]);
        record.field7 = fieldSetFlags()[7] ? this.field7 : (java.lang.Integer) defaultValue(fields()[7]);
        record.utcDatetime = fieldSetFlags()[8] ? this.utcDatetime : (java.lang.String) defaultValue(fields()[8]);
        if (metaInfoBuilder != null) {
          record.metaInfo = this.metaInfoBuilder.build();
        } else {
          record.metaInfo = fieldSetFlags()[9] ? this.metaInfo : (com.datalogs.dataschema.MetaInfo) defaultValue(fields()[9]);
        }
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SampleDatasetJson>
    WRITER$ = (org.apache.avro.io.DatumWriter<SampleDatasetJson>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SampleDatasetJson>
    READER$ = (org.apache.avro.io.DatumReader<SampleDatasetJson>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
